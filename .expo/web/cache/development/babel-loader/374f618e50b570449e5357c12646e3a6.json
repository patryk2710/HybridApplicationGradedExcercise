{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\seanm\\\\Documents\\\\HybridApplicationGradedExcercise\\\\components\\\\main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer, TabActions } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport HomeView from \"./homeView\";\nimport SearchView from \"./searchView\";\nimport PostsView from \"./postsView\";\nvar Tab = createBottomTabNavigator();\n\nvar Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, React.createElement(Tab.Navigator, {\n        initialRouteName: \"Home\",\n        tabBarOptions: {\n          activeTintColor: 'lightgrey',\n          inactiveTintColor: 'grey',\n          style: {\n            position: 'absolute',\n            backgroundColor: 'darkgrey'\n          },\n          labelStyle: {\n            fontSize: 12\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Home\",\n        component: HomeView,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialIcons, {\n              name: \"home\",\n              color: color,\n              size: size,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Search\",\n        component: SearchView,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return React.createElement(MaterialIcons, {\n              name: \"search\",\n              color: color,\n              size: size,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Posts\",\n        component: PostsView,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return React.createElement(MaterialIcons, {\n              name: \"list\",\n              color: color,\n              size: size,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      })))));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport { Main as default };\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    height: '100%',\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["C:/Users/seanm/Documents/HybridApplicationGradedExcercise/components/main.js"],"names":["React","Component","NavigationContainer","TabActions","createBottomTabNavigator","MaterialIcons","HomeView","SearchView","PostsView","Tab","Main","styles","root","activeTintColor","inactiveTintColor","style","position","backgroundColor","labelStyle","fontSize","tabBarIcon","color","size","StyleSheet","create","flex","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { StyleSheet, View, ScrollView, Text} from 'react-native'\r\nimport { NavigationContainer, TabActions } from '@react-navigation/native'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport HomeView from './homeView'\r\nimport SearchView from './searchView'\r\nimport PostsView from './postsView'\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default class Main extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n      <View style={ styles.root}>\r\n        <NavigationContainer>\r\n          <Tab.Navigator\r\n            initialRouteName=\"Home\"\r\n            tabBarOptions={{\r\n              activeTintColor: 'lightgrey',\r\n              inactiveTintColor: 'grey',\r\n              style: {\r\n                position: 'absolute',\r\n                backgroundColor: 'darkgrey'\r\n              },\r\n              labelStyle: {\r\n                fontSize: 12,\r\n              },\r\n            }}>\r\n            <Tab.Screen \r\n              name=\"Home\"\r\n              component={HomeView}\r\n              options={{\r\n                tabBarIcon: ({ color, size}) => (\r\n                  <MaterialIcons name=\"home\" color={color} size={size} />)\r\n              }}\r\n            />\r\n            <Tab.Screen \r\n              name=\"Search\"\r\n              component={SearchView}\r\n              options={{\r\n                tabBarIcon: ({ color, size}) => (\r\n                  <MaterialIcons name=\"search\" color={color} size={size} />)\r\n              }}\r\n            />\r\n            <Tab.Screen \r\n              name=\"Posts\"\r\n              component={PostsView}\r\n              options={{\r\n                tabBarIcon: ({ color, size}) => (\r\n                  <MaterialIcons name=\"list\" color={color} size={size} />)\r\n              }}\r\n            />\r\n          </Tab.Navigator>\r\n        </NavigationContainer>\r\n      </View>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    flex: 1,\r\n    height: '100%',\r\n    width: '100%',\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}